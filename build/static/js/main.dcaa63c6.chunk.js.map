{"version":3,"sources":["utils/dataUtils.js","components/Blank.js","components/QMS.js","components/QMB.js","components/Sample.js","components/Duplicate.js","components/Calibration.js","components/SampleHeader.js","components/HeaderInfo.js","components/CCV.js","App.js","index.js"],"names":["output","data","dupRegEx","RegExp","firstElementMass","mass","i","elementCount","length","values","j","push","concentration","sample_name","match","dupValues","sampleObject","id","number","sigFigs","oom","result","Math","pow","round","toPrecision","Blank","elements","LOQs","units","className","map","e","key","v","dataUtils","idx","passes","QMS","rangesLow","Infinity","rangesHigh","withinRange","QMB","Sample","coloured","Duplicate","average","RPD","abs","toFixed","aboveLOQ","std","SampleHeader","HeaderInfo","CCV","ccvValues","App","useEffect","document","title","calStandards","sampleRegEx","d","calData","slice","Calibration","includes","Date","now","reader","style","textAlign","paddingTop","fontWeight","cssClass","label","onFileLoaded","parsedData","ReactDOM","render","getElementById","parserOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace"],"mappings":"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","file":"static/js/main.dcaa63c6.chunk.js","sourcesContent":["\r\nconst parseJsonData = (output) => {\r\n\r\n  const data = []\r\n  const dupRegEx = new RegExp('(d|dup)', 'i')\r\n\r\n  const firstElementMass = output[0].mass\r\n  let i = 1;\r\n  while (output[i].mass !== firstElementMass) {\r\n    i++;\r\n  }\r\n  const elementCount = i;\r\n\r\n  for (let i = 0; i < output.length; i += elementCount) {\r\n\r\n    let values = []\r\n\r\n    for (let j = 0; j < elementCount; j++) {\r\n      values.push(output[i + j].concentration)\r\n    }\r\n\r\n    if (data.length > 1 && output[i].sample_name.match(dupRegEx)) {\r\n      data[data.length - 1].dupValues = values\r\n    } else {\r\n      const sampleObject = {\r\n        id: output[i].sample_name,\r\n        values,\r\n        dupValues: null\r\n      }\r\n      data.push(sampleObject)\r\n    }\r\n\r\n  }\r\n  return data\r\n}\r\n\r\nconst roundToSigFigs = (number, sigFigs) => {\r\n  let oom = 0;\r\n  let result = number;\r\n\r\n  if (number > 10) {\r\n    while (result > 10) {\r\n      result /= 10;\r\n      oom += 1;\r\n    }\r\n  }\r\n  else if (number < 0.0001 && number > 0) {\r\n    return '0.00'\r\n  }\r\n  else if (number < 10) {\r\n    while (result < 1 && result > 0) {\r\n      if (result < 0) {\r\n        result = result * (-1);\r\n      }\r\n      result = result * 10;\r\n      oom += 1;\r\n    }\r\n  }\r\n  if (number > 10) {\r\n    result = number / Math.pow(10, oom);\r\n    result = result * Math.pow(10, sigFigs - 1);\r\n    result = Math.round(result)\r\n    result = result / Math.pow(10, sigFigs - oom - 1)\r\n    result = result.toPrecision(sigFigs)\r\n\r\n  } else if (number < 0) {\r\n    result = number * Math.pow(10, sigFigs + 1);\r\n    result = Math.round(result);\r\n    result = result / Math.pow(10, sigFigs + 1)\r\n    result.toPrecision(sigFigs)\r\n\r\n  } else if (number < 1) {\r\n    result = number * Math.pow(10, oom);\r\n    result = result * Math.pow(10, sigFigs - 1)\r\n    result = Math.round(result)\r\n    result = result / Math.pow(10, sigFigs + oom - 1)\r\n    result = result.toPrecision(sigFigs)\r\n\r\n  }\r\n  else {\r\n    result = (number.toPrecision(sigFigs));\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport default { parseJsonData, roundToSigFigs }","import React from 'react'\r\nimport dataUtils from '../utils/dataUtils'\r\n\r\nconst Blank = ({ data, elements, LOQs, sigFigs, units }) => {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <table className='blankTable'>\r\n        <thead>\r\n          <tr>\r\n            <th className='firstCol'>Sample Type</th>\r\n            {elements.map((e, i) => <th key={e}>{e + ' (' + units[i] + ')'}</th>)}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td className='firstCol'>{data.id}</td>\r\n            {data.values.map(v => <td key={v}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>)}\r\n          </tr>\r\n          <tr>\r\n            <td className='firstCol'>&lt; LOQ</td>\r\n            {data.values.map((v, idx) => {\r\n              const passes = v < LOQs[idx]\r\n              return <td key={v} className={passes ? 'samplePass' : 'sampleFail'}>{passes ? 'Pass' : 'Fail'}</td>\r\n            })\r\n            }\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Blank","import React from 'react'\r\nimport dataUtils from '../utils/dataUtils'\r\n\r\nconst QMS = ({ data, elements, sigFigs, units }) => {\r\n\r\n  const rangesLow = [2.6, 0.7, 3.7, 0.9, 0.9, 0.1, 1.0, -Infinity]\r\n  const rangesHigh = [3.1, 1.0, 4.2, 1.2, 1.2, 0.15, 1.7, Infinity]\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <table className='RMTable'>\r\n        <thead>\r\n          <tr>\r\n            <th className='firstCol'>Sample Type</th>\r\n            {elements.map((e, i) => <th key={e}>{e + ' (' + units[i] + ')'}</th>)}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td className='firstCol'>{data.id}</td>\r\n            {data.values.map((v, i) => <td key={v + i}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>)}\r\n          </tr>\r\n          <tr>\r\n            <td className='firstCol'>Within Range</td>\r\n            {data.values.map((v, i) => {\r\n              const withinRange = (v > rangesLow[i] && v < rangesHigh[i])\r\n              return <td className={withinRange ? 'samplePass' : 'sampleFail'} key={v + i}> {withinRange ? 'Yes' : 'No'}</td>\r\n            })\r\n            }\r\n          </tr>\r\n        </tbody>\r\n\r\n      </table>\r\n      <br />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default QMS","import React from 'react'\r\nimport dataUtils from '../utils/dataUtils'\r\n\r\nconst QMB = ({ data, elements, sigFigs, units }) => {\r\n\r\n  const rangesLow = [-Infinity, -Infinity, -Infinity, -Infinity, -Infinity, 0.15, -Infinity, 0.10]\r\n  const rangesHigh = [Infinity, Infinity, Infinity, Infinity, Infinity, 0.20, Infinity, 0.14]\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <table className='RMTable'>\r\n        <thead>\r\n          <tr>\r\n            <th className='firstCol'>Sample Type</th>\r\n            {elements.map((e, i) => <th key={e}>{e + ' (' + units[i] + ')'}</th>)}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td className='firstCol'>{data.id}</td>\r\n            {data.values.map((v, i) => <td key={v + i}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>)}\r\n          </tr>\r\n          <tr>\r\n            <td className='firstCol'>Within Range</td>\r\n            {data.values.map((v, i) => {\r\n              const withinRange = (v > rangesLow[i] && v < rangesHigh[i])\r\n              return <td className={withinRange ? 'samplePass' : 'sampleFail'} key={v + i}> {withinRange ? 'Yes' : 'No'}</td>\r\n            })\r\n            }\r\n          </tr>\r\n        </tbody>\r\n\r\n      </table>\r\n      <br />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default QMB","import React from 'react'\r\nimport dataUtils from '../utils/dataUtils'\r\n\r\nconst Sample = ({ data, sigFigs, coloured }) => {\r\n\r\n  return (\r\n    <table className='sampleTable'>\r\n      <tbody>\r\n        <tr className={coloured ? 'colouredRow' : ''}>\r\n          <td className={'firstCol'}>{data.id}</td>\r\n          {data.values.map((v, i) => <td key={data.id + data.values[i]}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>)}\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Sample","import React from 'react'\r\nimport dataUtils from '../utils/dataUtils'\r\n\r\nconst Duplicate = ({ data, elements, LOQs, sigFigs, units }) => {\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <table className='RMTable'>\r\n        <thead>\r\n          <tr>\r\n            <th className='firstCol'>Sample ID</th>\r\n            {elements.map((e, i) => <th key={e}>{e + ' (' + units[i] + ')'}</th>)}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td className='firstCol'>{data.id}</td>\r\n            {data.values.map(v => <td key={v}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>)}\r\n          </tr>\r\n\r\n          <tr className='thickBottomBorder'>\r\n            <td className='firstCol'>{data.id} DUP</td>\r\n            {data.dupValues.map(v => <td key={v}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>)}\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className='firstCol'>Average</td>\r\n            {data.values.map((v, idx) => <td key={v}>{dataUtils.roundToSigFigs(((v + data.dupValues[idx]) / 2), sigFigs)}</td>)}\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className='firstCol'>RPD (%)</td>\r\n            {data.values.map((v, i) => {\r\n              const average = ((v + data.dupValues[i]) / 2)\r\n              const RPD = ((Math.abs(v - data.dupValues[i]) / average * 100).toFixed(1))\r\n              const aboveLOQ = v > LOQs[i]\r\n              return <td className={aboveLOQ ? RPD < 15 ? 'samplePass' : 'sampleFail' : 'sampleNeutral'} key={v + i}>{RPD}</td>\r\n            })\r\n            }\r\n          </tr>\r\n        </tbody>\r\n\r\n      </table>\r\n      <br />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Duplicate","import React from 'react'\r\nimport '../styles.css'\r\n\r\nconst Duplicate = ({ data, elements }) => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Calibration Data</h1>\r\n\r\n      <table className='calTable'>\r\n        <thead>\r\n          <tr>\r\n            <th className='firstCol'>Concentration</th>\r\n            {elements.map(e => <th key={e}>{e} (ppb)</th>)}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n\r\n          {data.map((std, i) => {\r\n            return <tr key={std.id + i}>\r\n              <td className='firstCol'>{std.id}</td>\r\n              {std.values.map((v, i) => {\r\n                if (std.id === '250 uog3' && v < 0.1) {\r\n                  return <td className={i === 0 ? 'firstCol' : ''} key={v + i}> </td>\r\n                }\r\n                return <td key={v + i}>{v < 1 ? (v * 1000).toPrecision(4) : v.toPrecision(4)}</td>\r\n              }\r\n              )}\r\n            </tr>\r\n          })\r\n          }\r\n\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n\r\n\r\n      <h1>Sample Data</h1>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Duplicate","import React from 'react'\r\n\r\nconst SampleHeader = ({ elements, units }) => {\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <table className='sampleTable'>\r\n        <tbody>\r\n          <tr>\r\n            <th className='firstCol'>Sample ID</th>\r\n            {elements.map((e, i) => <th key={e}>{e + ' (' + units[i] + ')'}</th>)}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default SampleHeader","import React from 'react'\r\n\r\nconst HeaderInfo = () => {\r\n  return <div>\r\n    <h1>Sequence Information</h1>\r\n    <div className='headerItem'>Analyst: _________________________</div>\r\n    <div className='headerItem'>Analysis Date: _________________________</div>\r\n    <div className='headerItem'>Sequence ID: ______________________________________</div>\r\n    <div className='headerItem'>Software Version: MassHunter v4.6</div>\r\n    <div className='headerItem'>Autosampler Info: ESI prepFAST SC4</div>\r\n  </div>\r\n}\r\n\r\nexport default HeaderInfo","import React from 'react'\r\nimport dataUtils from '../utils/dataUtils'\r\n\r\nconst CCV = ({ data, ccvValues, elements, sigFigs }) => {\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <table className='RMTable'>\r\n        <thead>\r\n          <tr>\r\n            <th className='firstCol'>Sample Type</th>\r\n            {elements.map((e, i) => <th key={e}>{e} (ppb)</th>)}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td className='firstCol'>{data.id}</td>\r\n            {data.values.map((v, i) => {\r\n              if (v < 1) {\r\n                v = v * 1000\r\n              }\r\n              return <td key={v + i}>{dataUtils.roundToSigFigs(v, sigFigs)}</td>\r\n            })\r\n            }\r\n          </tr>\r\n          <tr>\r\n            <td className='firstCol'>Within Range</td>\r\n            {data.values.map((v, i) => {\r\n              if (v < 1) {\r\n                v = v * 1000\r\n              }\r\n              const withinRange = (v > (ccvValues[i] * 0.9)) && (v < (ccvValues[i] * 1.1))\r\n              return <td className={withinRange ? 'samplePass' : 'sampleFail'} key={v + i}> {withinRange ? 'Yes' : 'No'}</td>\r\n            })\r\n            }\r\n          </tr>\r\n        </tbody>\r\n\r\n      </table>\r\n      <br />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default CCV","import React, { useEffect } from 'react'\n\nimport Blank from './components/Blank'\nimport QMS from './components/QMS'\nimport QMB from './components/QMB'\nimport Sample from './components/Sample'\nimport Duplicate from './components/Duplicate'\nimport Calibration from './components/Calibration'\nimport SampleHeader from './components/SampleHeader'\nimport HeaderInfo from './components/HeaderInfo'\nimport CCV from './components/CCV'\n\nconst App = ({ data }) => {\n\n  useEffect(() => {\n    document.title = 'CHEM-162 Reporting Summary'\n  }, []);\n\n  const elements = [\"Mn\", \"Fe\", \"Co\", \"Cu\", \"Zn\", \"Se\", \"Mo\", \"Pb\"]\n  const units = [\"ppb\", \"ppm\", \"ppb\", \"ppm\", \"ppm\", \"ppm\", \"ppb\", \"ppm\"]\n  const LOQs = [0.3, 0.0002, 0.4, 0.001, 0.0002, 0.0001, 0.3, 0.0003]\n  const calStandards = [0, 0.05, 0.1, 0.25, 0.5, 1, 5, 10, 50, 250]\n  const ccvValues = [5, 50, 5, 50, 50, 5, 5, 5]\n  const sigFigs = 3\n\n  const sampleRegEx = new RegExp('[0-9]{2}-[0-9]{6}-[0-9]{4}')\n\n  return (\n    <div>\n      <HeaderInfo />\n      {data[0].id && data.map((d, idx) => {\n        if (d.id === 'Blank' && idx < 12) {\n          const calData = data.slice(idx, idx + calStandards.length)\n          return <Calibration\n            data={calData}\n            key={idx}\n            elements={elements} />\n        }\n        if (d.id === 'Blank' && idx > 12) {\n          return <Blank data={d}\n            key={idx}\n            LOQs={LOQs}\n            elements={elements}\n            sigFigs={sigFigs}\n            units={units} />\n        }\n        else if (d.id === '5/50 ppb') {\n          return <CCV\n            data={d}\n            key={idx}\n            ccvValues={ccvValues}\n            elements={elements}\n            sigFigs={sigFigs} />\n        }\n        else if (d.id.includes('QM-S')) {\n          return <QMS\n            data={d}\n            key={idx}\n            elements={elements}\n            sigFigs={sigFigs}\n            units={units} />\n        }\n        else if (d.id.includes('QM-B')) {\n          return <QMB\n            data={d}\n            key={idx}\n            elements={elements}\n            sigFigs={sigFigs}\n            units={units} />\n        }\n        else if (d.id.match(sampleRegEx) && d.dupValues) {\n          return <Duplicate\n            data={d}\n            key={idx}\n            elements={elements}\n            LOQs={LOQs}\n            sigFigs={sigFigs}\n            units={units} />\n        }\n        else if (d.id.match(sampleRegEx)) {\n          if (data[idx - 1] && (!data[idx - 1].id.match(sampleRegEx) || data[idx - 1].dupValues)) {\n            return (<div key={d.id + idx}>\n              <SampleHeader\n                elements={elements}\n                key={Date.now()}\n                units={units} />\n\n              <Sample data={d}\n                key={idx}\n                sigFigs={sigFigs}\n                coloured={idx % 2 === 1} /></div>)\n          }\n          return <Sample\n            data={d}\n            key={idx}\n            sigFigs={sigFigs}\n            coloured={idx % 2 === 1} />\n        }\n        return null\n      })\n      }\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from './App'\nimport './styles.css'\n\nimport CSVReader from \"react-csv-reader\";\nimport dataUtils from './utils/dataUtils'\n\nconst handleForce = (data) => {\n  const parsedData = dataUtils.parseJsonData(data)\n  ReactDOM.render(<div className='container'><App data={parsedData} /></div>, document.getElementById(\"root\"));\n}\n\nconst papaparseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\n};\n\nconst reader = (\n  <div className=\"container\" style={{ textAlign: 'center', paddingTop: '40px', fontWeight: 'bold' }}>\n    <CSVReader\n      cssClass=\"react-csv-input\"\n      label=\"Select CHEM-162 LIMS Export of all samples\"\n      onFileLoaded={handleForce}\n      parserOptions={papaparseOptions}\n    />\n    <p>Built by JCQC</p>\n  </div>\n);\n\nReactDOM.render(reader, document.getElementById(\"root\"));"],"sourceRoot":""}